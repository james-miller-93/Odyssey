{
  "_args": [
    [
      {
        "raw": "react-native-app-intro",
        "scope": null,
        "escapedName": "react-native-app-intro",
        "name": "react-native-app-intro",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/Roula/Odyssey"
    ]
  ],
  "_from": "react-native-app-intro@latest",
  "_id": "react-native-app-intro@1.1.5",
  "_inCache": true,
  "_location": "/react-native-app-intro",
  "_nodeVersion": "5.11.1",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/react-native-app-intro-1.1.5.tgz_1476236482986_0.32760764192789793"
  },
  "_npmUser": {
    "name": "fuyaode",
    "email": "dan82625@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-app-intro",
    "scope": null,
    "escapedName": "react-native-app-intro",
    "name": "react-native-app-intro",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-app-intro/-/react-native-app-intro-1.1.5.tgz",
  "_shasum": "34a2d2265b2d654d31bae743c404856c37448692",
  "_shrinkwrap": null,
  "_spec": "react-native-app-intro",
  "_where": "/Users/Roula/Odyssey",
  "author": "",
  "bugs": {
    "url": "https://github.com/fuyaode/react-native-app-intro/issues"
  },
  "dependencies": {
    "assign-deep": "^0.4.5",
    "react-native-swiper": "git+https://github.com/FuYaoDe/react-native-swiper.git"
  },
  "description": "react-native-app-intro is a react native plugin implementing a parallax effect welcome page using base on react-native-swiper , similar to the one found in Google's app like Sheet, Drive, Docs...",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "34a2d2265b2d654d31bae743c404856c37448692",
    "tarball": "https://registry.npmjs.org/react-native-app-intro/-/react-native-app-intro-1.1.5.tgz"
  },
  "gitHead": "fe25254f868ff830d06781de71458858ed8052ab",
  "homepage": "https://github.com/fuyaode/react-native-app-intro#readme",
  "keywords": [
    "swiper",
    "ProductTour",
    "App",
    "Intro",
    "ios",
    "android",
    "react-component",
    "react-native"
  ],
  "license": "ISC",
  "main": "AppIntro.js",
  "maintainers": [
    {
      "name": "fuyaode",
      "email": "dan82625@gmail.com"
    }
  ],
  "name": "react-native-app-intro",
  "optionalDependencies": {},
  "readme": "# react-native-app-intro\nreact-native-app-intro is a react native component implementing a parallax effect welcome page using base on [react-native-swiper](https://github.com/leecade/react-native-swiper) , similar to the one found in Google's app like Sheet, Drive, Docs...\n\n# react-native-app-intro Screen Capture\n\n[Example code](https://github.com/FuYaoDe/react-native-app-intro/tree/master/Example)\n\n### Support ios、android\n<img src=\"http://i.giphy.com/3o6ozjLoOnYTXfzJgQ.gif\">\n<img src=\"http://gifyu.com/images/android.gif\">\n\n<a href=\"http://www.freepik.com\">Designed by Freepik</a>\n\n### Installation\n\n```bash\n$ npm i react-native-app-intro --save\n```\n\n### Basic Usage\n\nYou can use pageArray quick generation your app intro with parallax effect. With the basic usage, the Android status bar will be updated to match your slide background color.\n\n<img src=\"http://i.giphy.com/l3V0khy22aUviTTaM.gif\">\n\n<img src=\"./assets/sample-android.gif\" style=\"width: 272px;\">\n\n```javascript\nimport React, { Component } from 'react';\nimport { AppRegistry, Alert } from 'react-native';\nimport AppIntro from 'react-native-app-intro';\n\nclass Example extends Component {\n  onSkipBtnHandle = (index) => {\n    Alert.alert('Skip');\n    console.log(index);\n  }\n  doneBtnHandle = () => {\n    Alert.alert('Done');\n  }\n  nextBtnHandle = (index) => {\n    Alert.alert('Next');\n    console.log(index);\n  }\n  onSlideChangeHandle = (index, total) => {\n    console.log(index, total);\n  }\n  render() {\n    const pageArray = [{\n      title: 'Page 1',\n      description: 'Description 1',\n      img: 'https://goo.gl/Bnc3XP',\n      imgStyle: {\n        height: 80 * 2.5,\n        width: 109 * 2.5,\n      },\n      backgroundColor: '#fa931d',\n      fontColor: '#fff',\n      level: 10,\n    }, {\n      title: 'Page 2',\n      description: 'Description 2',\n      img: require('../assets/some_image.png'),\n      imgStyle: {\n        height: 93 * 2.5,\n        width: 103 * 2.5,\n      },\n      backgroundColor: '#a4b602',\n      fontColor: '#fff',\n      level: 10,\n    }];\n    return (\n      <AppIntro\n        onNextBtnClick={this.nextBtnHandle}\n        onDoneBtnClick={this.doneBtnHandle}\n        onSkipBtnClick={this.onSkipBtnHandle}\n        onSlideChange={this.onSlideChangeHandle}\n        pageArray={pageArray}\n      />\n    );\n  }\n}\n\nAppRegistry.registerComponent('Example', () => Example);\n```\n\n### Advanced Usage\n\nIf you need customized page like my Example, you can  pass in `View` component into AppIntro component and set level. Remember any need use parallax effect component, Need to be `<View level={10}></View>` inside.\n\n<img src=\"http://i.giphy.com/26AHwds1g5HjXrd4s.gif\">\n\n```javascript\nimport React, { Component } from 'react';\nimport {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View,\n} from 'react-native';\nimport AppIntro from 'react-native-app-intro';\n\nconst styles = StyleSheet.create({\n  slide: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#9DD6EB',\n    padding: 15,\n  },\n  text: {\n    color: '#fff',\n    fontSize: 30,\n    fontWeight: 'bold',\n  },\n});\n\nclass Example extends Component {\n\n  render() {\n    return (\n      <AppIntro>\n        <View style={[styles.slide,{ backgroundColor: '#fa931d' }]}>\n          <View level={10}><Text style={styles.text}>Page 1</Text></View>\n          <View level={15}><Text style={styles.text}>Page 1</Text></View>\n          <View level={8}><Text style={styles.text}>Page 1</Text></View>\n        </View>\n        <View style={[styles.slide, { backgroundColor: '#a4b602' }]}>\n          <View level={-10}><Text style={styles.text}>Page 2</Text></View>\n          <View level={5}><Text style={styles.text}>Page 2</Text></View>\n          <View level={20}><Text style={styles.text}>Page 2</Text></View>\n        </View>\n        <View style={[styles.slide,{ backgroundColor: '#fa931d' }]}>\n          <View level={8}><Text style={styles.text}>Page 3</Text></View>\n          <View level={0}><Text style={styles.text}>Page 3</Text></View>\n          <View level={-10}><Text style={styles.text}>Page 3</Text></View>\n        </View>\n        <View style={[styles.slide, { backgroundColor: '#a4b602' }]}>\n          <View level={5}><Text style={styles.text}>Page 4</Text></View>\n          <View level={10}><Text style={styles.text}>Page 4</Text></View>\n          <View level={15}><Text style={styles.text}>Page 4</Text></View>\n        </View>\n      </AppIntro>\n    );\n  }\n}\nAppRegistry.registerComponent('Example', () => Example);\n```\n\nAnd in Android, image inside view component, view need width、height.\n```javascript\n<View style={{\n  position: 'absolute',\n  top: 80,\n  left: 30,\n  width: windows.width,\n  height: windows.height,\n}} level={20}\n>\n  <Image style={{ width: 115, height: 70 }} source={require('./img/1/c2.png')} />\n</View>\n```\n\n## **Properties**\n| Prop           | PropType | Default Value           | Description                                                                                                                                                                                                                                                                                                                                                      |\n|----------------|----------|-------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| dotColor       | string   | 'rgba(255,255,255,0.3)' | Bottom of the page dot color                                                                                                                                                                                                                                                                                                                                     |\n| activeDotColor | string   | '#fff'                  | Active page index dot color                                                                                                                                                                                                                                                                                                                                      |\n| rightTextColor | string   | '#fff'                  | The bottom right Text `Done、>` color                                                                                                                                                                                                                                                                                                                            |\n| leftTextColor  | string   | '#fff'                  | The bottom left Text `Skip` color                                                                                                                                                                                                                                                                                                                                |\n| onSlideChange  | (index, total) => {} |                         | function to call when the pages change                                                                                                                                                                                                                                                                                                                           |\n| onSkipBtnClick | (index) => {}     |                         | function to call when the Skip button click                                                                                                                                                                                                                                                                                                                      |\n| onDoneBtnClick | func     |                         | function to call when the Done button click                                                                                                                                                                                                                                                                                                                      |\n| onNextBtnClick | (index) => {}     |                         | function to call when the Next '>' button click                                                                                                                                                                                                                                                                                                                  |\n| doneBtnLabel   | string、Text element  |  Done                   | The bottom right custom Text label                                                                                                                                                                                                                                                                                                                   |\n| skipBtnLabel   | string、Text element  |  Skip                   | The bottom left custom Text label                                                                                                                                                                                                                                                                                                                  |\n| nextBtnLabel   | string、Text element   |  ›                      | The bottom left custom Text label                                                                                                                                                                                                                                                                                                                  |\n| pageArray      | array    |                         | In the basic usage, you can input object array to render basic view example: ```[[{title: 'Page 1', description: 'Description 1', img: 'https://goo.gl/uwzs0C', imgStyle: {height: 80 * 2.5, width: 109 * 2.5 }, backgroundColor: '#fa931d', fontColor: '#fff', level: 10 }]``` , level is parallax effect level ,if you use pageArray you can't use custom view |\n| defaultIndex | number   | 0 | number of the index of the initial index |\n| showSkipButton | bool | true | a boolean defining if we should render the skip button |\n| showDoneButton | bool | true | a boolean that defines if we should render the done button |\n\n##### **Children View Properties**\n| Prop  | PropType | Default Value | Description           |\n|-------|----------|---------------|-----------------------|\n| level | number   |               | parallax effect level |\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/fuyaode/react-native-app-intro.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.1.5"
}
