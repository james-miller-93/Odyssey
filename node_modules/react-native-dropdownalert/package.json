{
  "_args": [
    [
      {
        "raw": "react-native-dropdownalert@^3.4.0",
        "scope": null,
        "escapedName": "react-native-dropdownalert",
        "name": "react-native-dropdownalert",
        "rawSpec": "^3.4.0",
        "spec": ">=3.4.0 <4.0.0",
        "type": "range"
      },
      "/Users/Roula/Odyssey"
    ]
  ],
  "_from": "react-native-dropdownalert@>=3.4.0 <4.0.0",
  "_id": "react-native-dropdownalert@3.4.0",
  "_inCache": true,
  "_location": "/react-native-dropdownalert",
  "_nodeVersion": "6.10.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-native-dropdownalert_3.4.0_1520182454435_0.20349393579632236"
  },
  "_npmUser": {
    "name": "testshallpass",
    "email": "testshallpass@gmail.com"
  },
  "_npmVersion": "5.4.2",
  "_phantomChildren": {
    "fbjs": "0.8.16",
    "loose-envify": "1.3.1"
  },
  "_requested": {
    "raw": "react-native-dropdownalert@^3.4.0",
    "scope": null,
    "escapedName": "react-native-dropdownalert",
    "name": "react-native-dropdownalert",
    "rawSpec": "^3.4.0",
    "spec": ">=3.4.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-dropdownalert/-/react-native-dropdownalert-3.4.0.tgz",
  "_shasum": "ce60a279b541d35a5d879bec49ff9437f738346a",
  "_shrinkwrap": null,
  "_spec": "react-native-dropdownalert@^3.4.0",
  "_where": "/Users/Roula/Odyssey",
  "author": {
    "name": "Brian Sinnicke"
  },
  "bugs": {
    "url": "https://github.com/testshallpass/react-native-dropdownalert/issues"
  },
  "dependencies": {
    "prop-types": "15.5.10"
  },
  "description": "A simple alert to notify users about new chat messages, something went wrong or everything is ok.",
  "devDependencies": {
    "babel-jest": "19.0.0",
    "babel-preset-react-native": "1.9.1",
    "enzyme": "2.8.2",
    "enzyme-to-json": "1.5.1",
    "jest": "19.0.2",
    "prop-types": "15.5.10",
    "react": "16.0.0-alpha.6",
    "react-dom": "15.5.4",
    "react-native": "0.44.0",
    "react-test-renderer": "15.5.4"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-KO4T8i/cGe7Tqkdj8EFIS5MbXiaQjg9NIKhFlGCFIMNiuG4UNeHYUnVe++nP+ino2J1bql9NfVh0Q+kAC/1+6Q==",
    "shasum": "ce60a279b541d35a5d879bec49ff9437f738346a",
    "tarball": "https://registry.npmjs.org/react-native-dropdownalert/-/react-native-dropdownalert-3.4.0.tgz",
    "fileCount": 24,
    "unpackedSize": 41142
  },
  "gitHead": "4c3054cffd5cdf505da3ae1d7279ed6fe663c9bf",
  "homepage": "https://github.com/testshallpass/react-native-dropdownalert#readme",
  "jest": {
    "preset": "react-native",
    "modulePathIgnorePatterns": [
      "/Example"
    ],
    "coverageDirectory": "./coverage/",
    "collectCoverage": true
  },
  "keywords": [
    "dropdown",
    "alert",
    "error",
    "info",
    "warning",
    "react-native",
    "ios",
    "android",
    "react-component"
  ],
  "license": "MIT",
  "main": "DropdownAlert.js",
  "maintainers": [
    {
      "name": "testshallpass",
      "email": "testshallpass@gmail.com"
    }
  ],
  "name": "react-native-dropdownalert",
  "optionalDependencies": {},
  "readme": "## react-native-dropdownalert\n\n[![Platform](https://img.shields.io/badge/platform-react--native-lightgrey.svg)](http://facebook.github.io/react-native/)\n[![npm version](http://img.shields.io/npm/v/react-native-dropdownalert.svg)](https://www.npmjs.com/package/react-native-dropdownalert)\n[![npm version](http://img.shields.io/npm/dm/react-native-dropdownalert.svg)](https://www.npmjs.com/package/react-native-dropdownalert)\n[![Build Status](https://travis-ci.org/testshallpass/react-native-dropdownalert.svg?branch=master)](https://travis-ci.org/testshallpass/react-native-dropdownalert)\n[![codecov](https://codecov.io/gh/testshallpass/react-native-dropdownalert/branch/master/graph/badge.svg)](https://codecov.io/gh/testshallpass/react-native-dropdownalert)\n[![License](https://img.shields.io/badge/license-MIT-blue.svg)](https://raw.github.com/testshallpass/react-native-dropdownalert/master/LICENSE)\n\n![screenshot](https://raw.github.com/testshallpass/react-native-dropdownalert/master/screenshots/info.png) ![screenshot](https://raw.github.com/testshallpass/react-native-dropdownalert/master/screenshots/warning.png) ![screenshot](https://raw.github.com/testshallpass/react-native-dropdownalert/master/screenshots/error.png) ![screenshot](https://raw.github.com/testshallpass/react-native-dropdownalert/master/screenshots/success.png)\n\n### Table of contents\n1. [Support](#support)\n2. [Installation](#installation)\n3. [Demo](#demo)\n4. [Usage](#usage)\n5. [Props](#props)\n\nA simple alert to notify users about new chat messages, something went wrong or everything is ok. It can be closed by tap, cancel button, automatically with `closeInterval`, pan responder up gesture or programmatically.\n\n### Support\n| react-native version | package version | reason |\n| ---- | :---: | ---- |\n| 0.50.0 | >=3.2.0 | Added SafeAreaView (iPhone X) |\n| 0.44.0 | >=2.12.0 | Added ViewPropTypes |\n\n### Installation\n```\nnpm i react-native-dropdownalert --save\n```\n\n### Demo\n![screenshot](https://raw.github.com/testshallpass/react-native-dropdownalert/master/screenshots/demo.gif)\n\n### Usage\n```javascript\nimport DropdownAlert from 'react-native-dropdownalert';\nexport default class Example extends Component {\n  // ...\n  onError = error => {\n    if (error) {\n      this.dropdown.alertWithType('error', 'Error', error);\n    }\n  };\n  // ...\n  onClose(data) {\n    // data = {type, title, message, action}\n    // action means how the alert was closed.\n    // returns: automatic, programmatic, tap, pan or cancel\n  }\n  render() {\n    return (\n      <View>\n        // !!! Make sure it's the last component in your document tree.\n        <DropdownAlert ref={ref => this.dropdown = ref} onClose={data => this.onClose(data)} />\n      </View>\n    );\n  }\n}\n```\n\n### Props\n| Name | Type | Description | Default |\n| ---- | :---: | --- | --- |\n| ```closeInterval``` | Number  | dismiss alert at a certain time in milliseconds | 4000\n| ```imageSrc``` | String or Number  | local or network source for custom alert type | null\n| ```infoImageSrc``` | String or Number  | local or network source for info alert type | ```require('./assets/info.png')```\n| ```warnImageSrc``` | String or Number  | local or network source for warn alert type | ```require('./assets/warn.png')```\n| ```errorImageSrc``` | String or Number  | local or network source for error alert type | ```require('./assets/error.png')```\n| ```successImageSrc``` | String or Number  | local or network source for success alert type | ```require('./assets/success.png')```\n| ```startDelta``` | Number  | where the container starts (changes based on container height onLayout) | -100\n| ```endDelta``` | Number  | where the container ends | 0\n| ```onClose``` | Function  | Invoked when alert is closed Returns: ```data = {type, title, message, action}```  | null\n| ```cancelBtnImageSrc``` | String or Number | local or network source | ```require('./assets/cancel.png')``` |\n| ```titleNumOfLines``` | Number  | number of lines | 1\n| ```messageNumOfLines``` | Number  | number of lines | 3\n| ```onCancel``` | Function  | Cancel button action. Returns: ```data = {type, title, message, action}``` | null\n| ```showCancel``` | Bool  | whether or not to show cancel button | false\n| ```tapToCloseEnabled``` | Bool  | enable/disable close with tap | true\n| ```panResponderEnabled``` | Bool  | enable/disable close with pan responder | true\n| ```replaceEnabled``` | Bool  | enables the alert to either state change without dismissal or go to next alert with dismissal | true\n| ```translucent``` | Bool  | StatusBar prop  | false\n| ```useNativeDriver``` | Bool  | enable/disable native driver for animations. For android platform, in some older React Native versions, enable useNativeDriver can cause some problems. See [#65](https://github.com/testshallpass/react-native-dropdownalert/issues/65)  | true (iOS) / false (Android)\n| ```updateStatusBar``` | Bool  | whether or not to update status bar styles  | true\n| ```activeStatusBarStyle``` | String  | StatusBar barStyle when alert is open | `light-content`\n| ```activeStatusBarBackgroundColor``` | String | StatusBar backgroundColor when alert is open | It takes on the backgroundColor of alert if predefined else default or provided prop\n| ```inactiveStatusBarStyle``` | String  | StatusBar barStyle when alert dismisses | `StatusBar._defaultProps.barStyle.value`\n| ```inactiveStatusBarBackgroundColor``` | String  | StatusBar backgroundColor when alert dismisses | `StatusBar._defaultProps.backgroundColor.value`\n| ```containerStyle``` | ViewPropTypes.style  | styles for container for custom type only | ```{ padding: 16, flexDirection: 'row' }```\n| ```zIndex``` | Number  | zIndex attribute on outermost container | null\n| ```titleStyle``` | Text.propTypes.style  | styles for title for all types | ```{       fontSize: 16, textAlign: 'left', fontWeight: 'bold', color: 'white', backgroundColor: 'transparent' }```\n| ```messageStyle``` | Text.propTypes.style  | styles for message for all types | ```{ fontSize: 14, textAlign: 'left', fontWeight: 'bold', color: 'white', backgroundColor: 'transparent' }```\n| ```imageStyle``` | Image.propTypes.style  | styles for image for all types | ```{    padding: 8, width: 36, height: 36, alignSelf: 'center' }```\n| ```cancelBtnImageStyle``` | Image.propTypes.style  | styles for image for all types | ```{    padding: 8, width: 36, height: 36, alignSelf: 'center' }```\n| ```successColor``` | String  | Default background color of success message | #32A54A\n| ```infoColor``` | String  | Default background color of info message | #2B73B6\n| ```warnColor``` | String  | Default background color of warn message | #cd853f\n| ```errorColor``` | String  | Default background color of error message | #cc3232\n| ```elevation``` | Number  | Animated.View elevation | 1\n| ```sensitivity``` | Number  | Sensitivity for the pan responder up gesture | 20\n| ```defaultContainer``` | ViewPropTypes.style  | Style for inner view container (**override paddingTop with this**) | ```{ padding: 8, paddingTop: IS_ANDROID ? 0 : 20, flexDirection: 'row' } ```\n| ```defaultTextContainer``` | ViewPropTypes.style  | Style for inner text container (holds title and message) | ```{ flex: 1, padding: 8 }```\n| ```renderImage``` | Function  | Use to overide the left image component  | undefined\n| ```renderCancel``` | Function  | Use to overide the cancel button component  | undefined\n| ```renderTitle``` | Function  | Use to overide the title component  | undefined\n| ```renderMessage``` | Function  | Use to overide the message component  | undefined\n\n> Inspired by: [RKDropdownAlert](https://github.com/cwRichardKim/RKDropdownAlert)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/testshallpass/react-native-dropdownalert.git"
  },
  "scripts": {
    "test": "jest",
    "test:ci": "jest && codecov"
  },
  "version": "3.4.0"
}
